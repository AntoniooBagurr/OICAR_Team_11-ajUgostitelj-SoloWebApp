@model WebApp.ViewModels.PaymentFormViewModel
@{
    ViewData["Title"] = "Confirm Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/cart.css" />

<div class="container-cart">
    <h1 class="cart-title">Confirm Payment</h1>

    <form method="post" asp-controller="Payment" asp-action="Process" class="checkout-form" style="max-width:600px;margin:auto;">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="TableId" />
        <input type="hidden" asp-for="TotalAmount" />

        <div style="margin-bottom:20px;">
            <label for="paymentMethod" style="font-weight:bold;color:var(--primary-color);">Payment Method</label>
            <select name="Method" id="paymentMethod" class="quantity-input">
                <option value="Cash">Cash</option>
                <option value="PayPal">PayPal</option>
            </select>
        </div>
       <!-- cash button; will submit the form -->
+        <button type="submit" id="cash-button"  class="submit-btn">
+          Pay with Cash
+        </button>
    </form>
    <div id="paypal-button-container" style="margin-top:20px;"></div>
    <a href="@Url.Action("Index", "Cart")" class="continue-shopping">Back to Cart</a>
</div>

@section Scripts {
         <script>
             document.addEventListener("DOMContentLoaded", () => {
                 const methodSelect    = document.getElementById("paymentMethod");
                 const cashButton      = document.getElementById("cash-button");
                 const paypalContainer = document.getElementById("paypal-button-container");

                 const stored = localStorage.getItem("selectedTableId");
                        if (stored) {
                            const tableInput = document.querySelector('input[name="TableId"]');
                        if (tableInput) tableInput.value = stored;
                        }

                 function updateButtons() {
                     const val = methodSelect.value;
                     cashButton.style.display      = (val === "Cash")  ? "inline-block" : "none";
                     paypalContainer.style.display = (val === "PayPal") ? "block"       : "none";
                 }

                 methodSelect.addEventListener("change", updateButtons);
                 updateButtons();  // initial

             });
         </script>
         <script src="https://www.paypal.com/sdk/js?client-id=AR_NOjho6npaDIpZLO5oEuZ3bl4GDS3fcjluCHXHneR3UfMuj06lZFnUUwmBr0RW9_WcIxwCOL1eqbRx&currency=EUR"></script>
         <script>
             paypal.Buttons({
                 createOrder: (data, actions) => fetch(
                   '@Url.Action("CreatePayPalOrder", "Payment")', {
                     method: 'post',
                     headers: { 'Content-Type': 'application/json' },
                     body: JSON.stringify({
                       amount:    @Model.TotalAmount,
                       currency:  'EUR',
                       reference: @Model.TableId
                     })
                 })
                 .then(res => res.json())
                 .then(r => r.id),

                 onApprove: (data) => {
                     location.href =
                       '@Url.Action("FinalizePayPal", "Payment")'
                       + `?orderID=${data.orderID}&tableId=@Model.TableId`;
                 }
             }).render('#paypal-button-container');
         </script>
}
