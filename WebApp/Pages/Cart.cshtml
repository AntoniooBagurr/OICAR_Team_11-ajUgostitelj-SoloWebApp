@page
@model WebApp.Pages.CartModel
@{
    ViewData["Title"] = "Your Shopping Cart";
}

<style>
    body {
        margin: 0;
        padding: 0;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f5f5f5;
    }

    .container-cart {
        max-width: 1200px;
        margin: 20px auto;
        padding: 20px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .cart-title {
        color: #6F4E37;
        margin-bottom: 20px;
        text-align: center;
    }

    .cart-items {
        margin-bottom: 30px;
    }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid #eee;
    }

    .item-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .item-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
    }

    .item-name {
        font-weight: bold;
        color: #333;
    }

    .item-price {
        color: #6F4E37;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .quantity-btn {
        width: 30px;
        height: 30px;
        background: #f0f0f0;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

    .quantity-input {
        width: 50px;
        text-align: center;
        padding: 5px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .remove-btn {
        background: none;
        border: none;
        color: #ff6b6b;
        cursor: pointer;
        font-size: 14px;
    }

    .cart-summary {
        text-align: right;
        padding: 20px;
        background: #f9f9f9;
        border-radius: 8px;
        margin-top: 20px;
    }

    .total-price {
        font-size: 1.5rem;
        font-weight: bold;
        color: #6F4E37;
    }

    .checkout-btn {
        padding: 12px 24px;
        background-color: #6F4E37;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s;
        margin-top: 15px;
    }

    .checkout-btn:hover {
        background-color: #5a3b2b;
    }

    .continue-shopping {
        display: inline-block;
        margin-top: 15px;
        color: #6F4E37;
        text-decoration: none;
        font-weight: bold;
    }

    .continue-shopping:hover {
        text-decoration: underline;
    }

    .footer {
        display: none;
    }

    @@media (max-width: 768px) {
        .cart-item {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .item-info {
            width: 100%;
        }

        .quantity-controls {
            margin-left: auto;
        }
    }
</style>

<div class="container-cart">
    <h1 class="cart-title">Your Shopping Cart</h1>

    <div class="cart-items">
        <!-- Espresso -->
        <div class="cart-item">
            <div class="item-info">
                <img src="https://images.unsplash.com/photo-1517701550927-30cf4ba1dba5" alt="Espresso" class="item-image">
                <div>
                    <div class="item-name">Espresso</div>
                    <div class="item-price">2.50 €</div>
                </div>
            </div>
            <div class="quantity-controls">
                <button class="quantity-btn">-</button>
                <input type="number" value="2" min="1" class="quantity-input">
                <button class="quantity-btn">+</button>
                <button class="remove-btn">Remove</button>
            </div>
        </div>

        <!-- Cappuccino -->
        <div class="cart-item">
            <div class="item-info">
                <img src="https://images.unsplash.com/photo-1534687941688-651ccaafbff8" alt="Cappuccino" class="item-image">
                <div>
                    <div class="item-name">Cappuccino</div>
                    <div class="item-price">3.20 €</div>
                </div>
            </div>
            <div class="quantity-controls">
                <button class="quantity-btn">-</button>
                <input type="number" value="1" min="1" class="quantity-input">
                <button class="quantity-btn">+</button>
                <button class="remove-btn">Remove</button>
            </div>
        </div>

        <!-- Blueberry Muffin -->
        <div class="cart-item">
            <div class="item-info">
                <img src="https://images.unsplash.com/photo-1550583724-b2692b85b150" alt="Blueberry Muffin" class="item-image">
                <div>
                    <div class="item-name">Blueberry Muffin</div>
                    <div class="item-price">2.70 €</div>
                </div>
            </div>
            <div class="quantity-controls">
                <button class="quantity-btn">-</button>
                <input type="number" value="3" min="1" class="quantity-input">
                <button class="quantity-btn">+</button>
                <button class="remove-btn">Remove</button>
            </div>
        </div>
    </div>

    <div class="cart-summary">
        <div class="total-price">Total: 14.90 €</div>
        <button class="checkout-btn">Proceed to Checkout</button>
        <a href="/" class="continue-shopping">Continue Shopping</a>
    </div>
</div>

@section Scripts {
    <script>
        // Functionality for quantity controls
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', () => {
                const input = button.parentElement.querySelector('.quantity-input');
                let value = parseInt(input.value);

                if (button.textContent === '+' && value < 99) {
                    input.value = value + 1;
                } else if (button.textContent === '-' && value > 1) {
                    input.value = value - 1;
                }

                updateTotal();
            });
        });

        // Functionality for remove buttons
        document.querySelectorAll('.remove-btn').forEach(button => {
            button.addEventListener('click', () => {
                button.closest('.cart-item').remove();
                updateTotal();
            });
        });

        // Quantity input change
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', () => {
                if (input.value < 1) input.value = 1;
                if (input.value > 99) input.value = 99;
                updateTotal();
            });
        });

        // Calculate total price
        function updateTotal() {
            let total = 0;

            document.querySelectorAll('.cart-item').forEach(item => {
                const priceText = item.querySelector('.item-price').textContent;
                const price = parseFloat(priceText.replace(' €', ''));
                const quantity = parseInt(item.querySelector('.quantity-input').value);

                total += price * quantity;
            });

            document.querySelector('.total-price').textContent = `Total: ${total.toFixed(2)} €`;
        }
    </script>
}